// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  email           String     @unique
  name            String?
  password        String
  role            Role       @default(USER)
  isEmailVerified Boolean    @default(false) @map("is_email_verified")
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  Token           Token[]
  Template        Template[]
  Asset           Asset[]
  Sentence        Sentence[]

  @@map("users")
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  createdAt   DateTime  @default(now()) @map("created_at")
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @map("user_id")

  @@map("tokens")
}

enum Role {
  USER
  ADMIN

  @@map("role_enum")
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL

  @@map("token_type_enum")
}

model Template {
  id        Int          @id @default(autoincrement())
  userId    Int          @map("user_id")
  name      String
  content   String       @db.Text
  type      TemplateType
  user      User         @relation(fields: [userId], references: [id])
  image     String?      @db.LongText
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")

  @@map("templates")
}

enum TemplateType {
  TEXT
  HTML

  @@map("template_type_enum")
}

model Asset {
  id     Int       @id @default(autoincrement())
  userId Int       @map("user_id")
  name   String
  src    String
  type   AssetType
  user   User      @relation(fields: [userId], references: [id])

  @@map("assets")
}

enum AssetType {
  FILE
  IMAGE

  @@map("asset_type_enum")
}

model Sentence {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  name      String
  content   String   @db.Text
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("sentences")
}
